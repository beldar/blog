<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Html | Transient Obsessions]]></title>
  <link href="http://beldar.github.io/blog/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://beldar.github.io/blog/"/>
  <updated>2014-03-24T18:09:31+00:00</updated>
  <id>http://beldar.github.io/blog/</id>
  <author>
    <name><![CDATA[MartÃ­ Planellas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Yeoman Workflow]]></title>
    <link href="http://beldar.github.io/blog/blog/24/03/2014/the-yeoman-workflow/"/>
    <updated>2014-03-24T14:39:04+00:00</updated>
    <id>http://beldar.github.io/blog/blog/24/03/2014/the-yeoman-workflow</id>
    <content type="html"><![CDATA[<h2>Searching for tools</h2>

<p>I&rsquo;ve been searching and trying new workflows when starting a front end project/project phase, there are a lot of interesting open source projects for rapid prototyping &lsquo;static&rsquo; websites in a reusable, collaborative, optimised and intelligent way.</p>

<p>I&rsquo;ve been trying tools like:</p>

<ul>
<li><a href="http://gruntjs.com/">Grunt</a> for automating build tasks like optimising images, minifying and uglifying javascript, css and html.</li>
<li><a href="http://bower.io/">Bower</a> a package manager for the web (meaning front end).</li>
<li><a href="http://compass-style.org/">Compass</a> I know it can do a lot of things but I&rsquo;m using it only to compile <a href="http://sass-lang.com/">Sass</a> files.</li>
</ul>


<p>But it wasn&rsquo;t until I found <a href="http://yeoman.io/">Yeoman</a> that everything came toghether.</p>

<p>It&rsquo;s a tool that scaffolds, downloads and prepares all these tools for you doing the tedious configuration part and using best practices approach in all parts.</p>

<h2>Instalation</h2>

<p> If you have node already you just have to run:</p>

<pre><code>npm install -g yo
</code></pre>

<p>Yeoman has lots of generators which basically are different scaffold variations using different libraries and components depending on which tools you need for the project.</p>

<p>The basic one is called <a href="https://github.com/yeoman/generator-webapp">generator-webapp</a> you can install it running:</p>

<pre><code>npm install -g generator-webapp
</code></pre>

<p>An then create a new project like this:</p>

<pre><code>yo webapp
</code></pre>

<p>It will ask you if you if you want some additional things:</p>

<p><img src="https://camo.githubusercontent.com/5f126a73cb4f0a16ca7b9e9c7b748a099458089b/687474703a2f2f692e696d6775722e636f6d2f754b545432486a2e706e67" alt="webapp-generator" /></p>

<p>And BOOM, you have a project structure ready to build using grunt, you can create a web server on the fly running <code>grunt serve</code> or build the project into the <code>/dist</code> folder running <code>grunt build</code>.</p>

<p>Then you can use bower to install other js libraries you need like:</p>

<pre><code>bower install --save underscore
</code></pre>

<p>The <code>--save</code> parameter ensures that the new library is saved on the <code>bower.json</code> file.</p>

<p>All your bower dependencies will end up in the <code>bower_components</code> folder which is not version controlled, when you want to install it somewhere else you&rsquo;ll run <code>bower install</code> inside and it will download all the libraries you need, just as <a href="https://getcomposer.org/">Composer</a> does for the back end.</p>

<h2>Using other generators</h2>

<p>That&rsquo;s one way of doing it, another way is to use other generators that are more specific to what you&rsquo;ll use in your project, for example I usually use <a href="http://backbonejs.org/">Backbone.js</a> in my projects, I could install it via bower, or I could use the <a href="https://github.com/yeoman/generator-backbone">generator-backbone</a>, which also gives me other interesting tools when building my app like generate models, collections, routers or views:</p>

<pre><code>yo backbone # generates your application base and build workflow
yo backbone:model blog
yo backbone:collection blog
yo backbone:router blog
yo backbone:view blog
</code></pre>

<p>There&rsquo;s a very thorough and extensive post about how to use it in <a href="http://code.tutsplus.com/tutorials/building-apps-with-the-yeoman-workflow--net-33254">NetTuts</a></p>

<p>There&rsquo;re quite a few <a href="http://yeoman.io/official-generators.html">official generators</a> and tons of <a href="http://yeoman.io/community-generators.html">community generators</a>, you can even <a href="http://yeoman.io/generators.html#writing-your-first-generator">write your own</a> with your own specifications.</p>
]]></content>
  </entry>
  
</feed>
